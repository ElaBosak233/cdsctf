basePath: /api
definitions:
  request.CategoryCreateRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      name:
        type: string
    required:
    - color
    - description
    - icon
    - name
    type: object
  request.CategoryDeleteRequest:
    properties:
      id:
        type: integer
    type: object
  request.CategoryUpdateRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - color
    - description
    - icon
    - id
    - name
    type: object
  request.ChallengeCreateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      has_attachment:
        type: boolean
      is_dynamic:
        type: boolean
      is_practicable:
        type: boolean
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ChallengeDeleteRequest:
    type: object
  request.ChallengeUpdateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      has_attachment:
        type: boolean
      is_dynamic:
        type: boolean
      is_practicable:
        type: boolean
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ConfigUpdateRequest:
    properties:
      container:
        $ref: '#/definitions/request.Container'
      site:
        $ref: '#/definitions/request.Site'
      user:
        $ref: '#/definitions/request.User'
    type: object
  request.Container:
    properties:
      parallel_limit:
        type: integer
      request_limit:
        type: integer
    type: object
  request.GameCreateRequest:
    properties:
      bio:
        type: string
      description:
        type: string
      ended_at:
        type: integer
      first_blood_reward_ratio:
        type: number
      is_enabled:
        type: boolean
      is_need_write_up:
        type: boolean
      is_public:
        type: boolean
      member_limit_max:
        type: integer
      member_limit_min:
        type: integer
      parallel_container_limit:
        type: integer
      password:
        type: string
      second_blood_reward_ratio:
        type: number
      started_at:
        type: integer
      third_blood_reward_ratio:
        type: number
      title:
        type: string
    required:
    - title
    type: object
  request.GameDeleteRequest:
    type: object
  request.GameTeamCreateRequest:
    properties:
      password:
        type: string
      team_id:
        type: integer
      user_id:
        type: integer
    type: object
  request.GameTeamUpdateRequest:
    properties:
      is_allowed:
        type: boolean
    type: object
  request.GameUpdateRequest:
    properties:
      bio:
        type: string
      description:
        type: string
      ended_at:
        type: integer
      first_blood_reward_ratio:
        type: number
      is_enabled:
        type: boolean
      is_need_write_up:
        type: boolean
      is_public:
        type: boolean
      member_limit_max:
        type: integer
      member_limit_min:
        type: integer
      parallel_container_limit:
        type: integer
      password:
        type: string
      second_blood_reward_ratio:
        type: number
      started_at:
        type: integer
      third_blood_reward_ratio:
        type: number
      title:
        type: string
    type: object
  request.GroupUpdateRequest:
    properties:
      description:
        type: string
      display_name:
        type: string
      id:
        type: integer
    type: object
  request.PodCreateRequest:
    properties:
      challenge_id:
        type: integer
      game_id:
        type: integer
      team_id:
        type: integer
    required:
    - challenge_id
    type: object
  request.PodRemoveRequest:
    properties:
      game_id:
        type: integer
      team_id:
        type: integer
    type: object
  request.PodRenewRequest:
    properties:
      game_id:
        type: integer
      team_id:
        type: integer
    type: object
  request.Site:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  request.SubmissionCreateRequest:
    properties:
      challenge_id:
        description: 题目 Id
        type: integer
      flag:
        description: 提交内容
        type: string
      game_id:
        description: 比赛 Id
        type: integer
      team_id:
        description: 团队 Id
        type: integer
    required:
    - challenge_id
    - flag
    type: object
  request.SubmissionDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.TeamCreateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - captain_id
    - name
    type: object
  request.TeamDeleteRequest:
    type: object
  request.TeamJoinRequest:
    properties:
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - team_id
    - user_id
    type: object
  request.TeamQuitRequest:
    properties:
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - team_id
    - user_id
    type: object
  request.TeamUpdateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      is_locked:
        type: boolean
      name:
        type: string
    type: object
  request.User:
    properties:
      allow_registration:
        type: boolean
    type: object
  request.UserCreateRequest:
    properties:
      email:
        type: string
      group_id:
        maximum: 5
        minimum: 1
        type: integer
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - group_id
    - nickname
    - password
    - username
    type: object
  request.UserDeleteRequest:
    type: object
  request.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserRegisterRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      token:
        type: string
      username:
        type: string
    required:
    - email
    - nickname
    - password
    - username
    type: object
  request.UserUpdateRequest:
    properties:
      email:
        type: string
      group_id:
        maximum: 5
        minimum: 1
        type: integer
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    type: object
info:
  contact: {}
  description: Hack for fun not for profit.
  title: Cloudsdale API
  version: "1.0"
paths:
  /categories/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: get category
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: CategoryCreateRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: create new category
      tags:
      - Category
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: CategoryDeleteRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete category
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: CategoryUpdateRequest
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CategoryUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: update category
      tags:
      - Category
  /challenges/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: category_id
        type: integer
      - in: query
        name: difficulty
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: is_detailed
        type: boolean
      - in: query
        name: is_dynamic
        type: boolean
      - in: query
        name: is_practicable
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: submission_qty
        type: integer
      - in: query
        name: team_id
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 题目查询
      tags:
      - Challenge
    post:
      consumes:
      - application/json
      parameters:
      - description: ChallengeCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建题目
      tags:
      - Challenge
  /challenges/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ChallengeDeleteRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除题目
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      parameters:
      - description: ChallengeUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新题目
      tags:
      - Challenge
  /challenges/{id}/flags:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建 flag
      tags:
      - Challenge
  /challenges/{id}/flags/{flag_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除 flag
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新 flag
      tags:
      - Challenge
  /challenges/{id}/hints:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建提示
      tags:
      - Challenge
  /challenges/{id}/hints/{hint_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除提示
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新提示
      tags:
      - Challenge
  /challenges/{id}/images:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建镜像
      tags:
      - Challenge
  /challenges/{id}/images/{image_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除镜像
      tags:
      - Challenge
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新镜像
      tags:
      - Challenge
  /configs/:
    get:
      consumes:
      - application/json
      description: 配置全部查询
      produces:
      - application/json
      responses: {}
      summary: 配置全部查询
      tags:
      - Config
    put:
      consumes:
      - application/json
      description: 更新配置
      parameters:
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.ConfigUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新配置
      tags:
      - Config
  /games/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: is_enabled
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 比赛查询
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: GameCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.GameCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建比赛
      tags:
      - Game
  /games/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: GameDeleteRequest
        in: body
        name: 删除请求
        required: true
        schema:
          $ref: '#/definitions/request.GameDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛
      tags:
      - Game
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: is_enabled
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 比赛查询
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: GameUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.GameUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新比赛
      tags:
      - Game
  /games/{id}/broadcast:
    get:
      description: 广播消息
      responses: {}
      summary: 广播消息
      tags:
      - Game
  /games/{id}/challenges:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的挑战
      tags:
      - Game
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 添加比赛的挑战
      tags:
      - Game
  /games/{id}/challenges/{challenge_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛的挑战
      tags:
      - Game
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 更新比赛的挑战
      tags:
      - Game
  /games/{id}/scoreboard:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的积分榜
      tags:
      - Game
  /games/{id}/teams:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 查询比赛的团队
      tags:
      - Game
    post:
      consumes:
      - application/json
      parameters:
      - description: GameTeamCreateRequest
        in: body
        name: 加入请求
        required: true
        schema:
          $ref: '#/definitions/request.GameTeamCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 加入比赛
      tags:
      - Game
  /games/{id}/teams/{team_id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 删除比赛的团队
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: GameTeamUpdateRequest
        in: body
        name: 允许加入请求
        required: true
        schema:
          $ref: '#/definitions/request.GameTeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 允许加入比赛
      tags:
      - Game
  /groups/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses: {}
      summary: Find groups
      tags:
      - Group
  /groups/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GroupUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.GroupUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: Update group
      tags:
      - Group
  /media/challenges/attachments/{id}:
    delete:
      consumes:
      - application/json
      description: 通过题目 Id 删除题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 删除 题目附件
      tags:
      - Media
    get:
      consumes:
      - application/json
      description: 通过题目 Id 获取题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 获取题目附件
      tags:
      - Media
    post:
      consumes:
      - multipart/form-data
      description: 通过题目 Id 设置题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      - description: 附件文件
        in: formData
        name: attachment
        required: true
        type: file
      responses: {}
      summary: 通过题目 Id 设置题目附件
      tags:
      - Media
  /media/challenges/attachments/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过题目 Id 查找题目附件信息
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 查找题目附件信息
      tags:
      - Media
  /media/games/cover/{id}:
    get:
      consumes:
      - application/json
      description: 通过比赛 Id 获取比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过比赛 Id 获取比赛封面
      tags:
      - Media
    post:
      consumes:
      - multipart/form-data
      description: 通过比赛 Id 设置比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      - description: 封面文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过比赛 Id 设置比赛封面
      tags:
      - Media
  /media/games/writeups/{id}:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取比赛 Writeup
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取比赛 Writeup
      tags:
      - Media
  /media/teams/avatar/{id}:
    delete:
      consumes:
      - application/json
      description: 通过团队 Id 删除团队头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 删除团队头像
      tags:
      - Media
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取团队头像
      tags:
      - Media
    post:
      consumes:
      - multipart/form-data
      description: 通过团队 Id 设置团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过团队 Id 设置团队头像
      tags:
      - Media
  /media/teams/avatar/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取团队头像信息
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取团队头像信息
      tags:
      - Media
  /media/users/avatar/{id}:
    delete:
      consumes:
      - application/json
      description: 通过用户 Id 删除用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 删除用户头像
      tags:
      - Media
    get:
      consumes:
      - application/json
      description: 通过用户 Id 获取用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 获取用户头像
      tags:
      - Media
    post:
      consumes:
      - multipart/form-data
      description: 通过用户 Id 设置用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过用户 Id 设置用户头像
      tags:
      - Media
  /media/users/avatar/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过用户 Id 获得用户头像信息
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 获得用户头像信息
      tags:
      - Media
  /pods/:
    get:
      description: 实例查询
      parameters:
      - in: query
        name: challenge_id
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: is_available
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: team_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 实例查询
      tags:
      - Pod
    post:
      consumes:
      - application/json
      description: 创建实例
      parameters:
      - description: PodCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 创建实例
      tags:
      - Pod
  /pods/{id}:
    delete:
      description: 停止并删除容器
      parameters:
      - description: PodRemoveRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRemoveRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 停止并删除容器
      tags:
      - Pod
    get:
      description: 实例查询
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 实例查询
      tags:
      - Pod
    put:
      description: 容器续期
      parameters:
      - description: PodRenewRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRenewRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 容器续期
      tags:
      - Pod
  /submissions/:
    get:
      consumes:
      - application/json
      parameters:
      - description: 题目 Id
        in: query
        name: challenge_id
        type: integer
      - description: 比赛 Id
        in: query
        name: game_id
        type: integer
      - description: 是否详细
        in: query
        name: is_detailed
        type: boolean
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: size
        type: integer
      - description: 排序参数
        in: query
        name: sort_key
        type: string
      - description: 排序方式
        in: query
        name: sort_order
        type: string
      - description: 评判结果
        in: query
        name: status
        type: integer
      - description: 团队 Id
        in: query
        name: team_id
        type: integer
      - description: 用户 Id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 提交记录查询
      tags:
      - Submission
    post:
      consumes:
      - application/json
      parameters:
      - description: SubmissionCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.SubmissionCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 提交
      tags:
      - Submission
  /submissions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: SubmissionDeleteRequest
        in: body
        name: 删除请求
        required: true
        schema:
          $ref: '#/definitions/request.SubmissionDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: delete submission
      tags:
      - Submission
  /teams/:
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - in: query
        name: captain_id
        type: integer
      - in: query
        name: game_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - Team
    post:
      consumes:
      - application/json
      description: 创建团队
      parameters:
      - description: TeamCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建团队
      tags:
      - Team
  /teams/{id}:
    delete:
      consumes:
      - application/json
      description: 删除团队
      parameters:
      - description: TeamDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除团队
      tags:
      - Team
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - Team
    put:
      consumes:
      - application/json
      description: 更新团队
      parameters:
      - description: TeamUpdateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新团队
      tags:
      - Team
  /teams/members/:
    delete:
      consumes:
      - application/json
      description: 退出团队
      parameters:
      - description: TeamQuitRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamQuitRequest'
      produces:
      - application/json
      responses: {}
      summary: 退出团队
      tags:
      - Team
    post:
      consumes:
      - application/json
      description: 加入团队
      parameters:
      - description: TeamJoinRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamJoinRequest'
      produces:
      - application/json
      responses: {}
      summary: 加入团队
      tags:
      - Team
  /users/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: sort_key
        type: string
      - in: query
        name: sort_order
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户查询
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: UserCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户创建
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UserDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserDeleteRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户删除
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: UserUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户更新
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserLoginRequest
        in: body
        name: 登录请求
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户登录
      tags:
      - User
  /users/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: 用户登出
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserRegisterRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户注册
      tags:
      - User
  /users/token/{token}:
    get:
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Token 鉴定
      tags:
      - User
swagger: "2.0"
