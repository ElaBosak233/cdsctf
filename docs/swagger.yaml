definitions:
  model.Category:
    properties:
      color:
        description: The category's theme color. (Such as Rainbow Dash's color is
          "#60AEE4")
        type: string
      created_at:
        description: The category's creation time.
        type: string
      description:
        description: The category's description.
        type: string
      icon:
        description: 'The category''s icon. (Based on Material Design Icons, Reference
          site: https://pictogrammers.com/library/mdi/) (Such as "fingerprint": https://pictogrammers.com/library/mdi/icon/fingerprint/)'
        type: string
      id:
        description: The category's id. As primary key.
        type: integer
      name:
        description: The category's name.
        type: string
      updated_at:
        description: The category's last update time.
        type: string
    type: object
  model.Challenge:
    properties:
      category:
        allOf:
        - $ref: '#/definitions/model.Category'
        description: The challenge's category.
      category_id:
        description: The challenge's category.
        type: integer
      created_at:
        description: The challenge's creation time.
        type: string
      description:
        description: The challenge's description.
        type: string
      difficulty:
        description: The degree of difficulty. (From 1 to 5)
        type: integer
      duration:
        description: The duration of container maintenance in the initial state. (Seconds)
        type: integer
      flags:
        items:
          $ref: '#/definitions/model.Flag'
        type: array
      has_attachment:
        description: Whether the challenge has attachment.
        type: boolean
      hints:
        items:
          $ref: '#/definitions/model.Hint'
        type: array
      id:
        description: The challenge's id. As primary key.
        type: integer
      images:
        items:
          $ref: '#/definitions/model.Image'
        type: array
      is_dynamic:
        description: Whether the challenge is based on dynamic container.
        type: boolean
      is_practicable:
        description: Whether the challenge is practicable. (Is the practice field
          visible.)
        type: boolean
      practice_pts:
        description: The points will be given when the challenge is solved in practice
          field.
        type: integer
      submissions:
        items:
          $ref: '#/definitions/model.Submission'
        type: array
      title:
        description: The challenge's title.
        type: string
      updated_at:
        description: The challenge's last update time.
        type: string
    type: object
  model.Env:
    properties:
      id:
        type: integer
      image:
        $ref: '#/definitions/model.Image'
      image_id:
        type: integer
      key:
        type: string
      value:
        type: string
    type: object
  model.Flag:
    properties:
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The challenge which the flag belongs to.
      challenge_id:
        description: The challenge id. The flag belongs to.
        type: integer
      env:
        description: The environment variable which is used to be injected with the
          flag.
        type: string
      id:
        description: The flag id.
        type: integer
      type:
        description: The flag type. ("static"/"dynamic"/"pattern")
        type: string
      value:
        description: The flag content. Maybe a string or a regex, or the placeholder
          for dynamic challenges. (Such as "flag{friendsh1p_1s_magic}" or "flag{[a-zA-Z]{5}}"
          or "flag{[UUID]}")
        type: string
    type: object
  model.Game:
    properties:
      bio:
        description: The game's short description.
        type: string
      challenges:
        description: The game's challenges.
        items:
          $ref: '#/definitions/model.Challenge'
        type: array
      created_at:
        description: The game's creation time.
        type: string
      description:
        description: The game's description. (Markdown supported.)
        type: string
      ended_at:
        description: The game's end time. (Unix)
        type: integer
      first_blood_reward_ratio:
        description: The prize ratio of first blood.
        type: number
      id:
        description: The game's id. As primary key.
        type: integer
      is_enabled:
        description: Whether the game is enabled.
        type: boolean
      is_need_write_up:
        description: Whether the game need write up.
        type: boolean
      is_public:
        description: Whether the game is public.
        type: boolean
      member_limit_max:
        description: The maximum team member limit.
        type: integer
      member_limit_min:
        description: The minimum team member limit.
        type: integer
      parallel_container_limit:
        description: The maximum parallel container limit.
        type: integer
      password:
        description: The game's password. Only enabled when the game is private.
        type: string
      second_blood_reward_ratio:
        description: The prize ratio of second blood.
        type: number
      started_at:
        description: The game's start time. (Unix)
        type: integer
      third_blood_reward_ratio:
        description: The prize ratio of third blood.
        type: number
      title:
        description: The game's title.
        type: string
      updated_at:
        description: The game's last update time.
        type: string
    type: object
  model.Group:
    properties:
      description:
        type: string
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.Hint:
    properties:
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The challenge which the hint belongs to.
      challenge_id:
        description: The challenge which the hint belongs to.
        type: integer
      content:
        description: The content of the hint.
        type: string
      created_at:
        description: The hint's creation time.
        type: string
      game:
        allOf:
        - $ref: '#/definitions/model.Game'
        description: The game which the hint belongs to.
      game_id:
        description: The game which the hint belongs to. (If 0, it means the hint
          is visible in practice field.)
        type: integer
      id:
        description: The hint's id.
        type: integer
      published_at:
        description: When the hint will be published.
        type: integer
      updated_at:
        description: The hint's last update time.
        type: string
    type: object
  model.Image:
    properties:
      challenge_id:
        type: integer
      cpu_limit:
        type: number
      description:
        type: string
      envs:
        items:
          $ref: '#/definitions/model.Env'
        type: array
      id:
        type: integer
      memory_limit:
        type: integer
      name:
        description: A name of image is always repository + tag. (Such as "nginx:latest")
        type: string
      ports:
        items:
          $ref: '#/definitions/model.Port'
        type: array
    type: object
  model.Port:
    properties:
      description:
        description: The port's description.
        type: string
      id:
        description: The port's id. As primary key.
        type: integer
      image:
        allOf:
        - $ref: '#/definitions/model.Image'
        description: The JeopardyImage which the port belongs to.
      image_id:
        description: The JeopardyImage which the port belongs to.
        type: integer
      value:
        description: The port number.
        type: integer
    type: object
  model.Submission:
    properties:
      challenge:
        allOf:
        - $ref: '#/definitions/model.Challenge'
        description: The challenge which is related to this submission.
      challenge_id:
        description: The challenge which is related to this submission.
        type: integer
      created_at:
        description: The submission's creation time.
        type: string
      flag:
        description: The flag which was submitted for judgement.
        type: string
      game:
        allOf:
        - $ref: '#/definitions/model.Game'
        description: The game which is related to this submission.
      game_id:
        description: The game which is related to this submission. (Must be set when
          TeamID is set)
        type: integer
      id:
        description: The submission's id. As primary key.
        type: integer
      pts:
        description: The points of the submission.
        type: integer
      status:
        description: The status of the submission. (0-meaningless, 1-accepted, 2-incorrect,
          3-cheat, 4-duplicate)
        type: integer
      team:
        allOf:
        - $ref: '#/definitions/model.Team'
        description: The team which submitted the flag.
      team_id:
        description: The team which submitted the flag. (Must be set when GameID is
          set)
        type: integer
      updated_at:
        description: The submission's last update time.
        type: string
      user:
        allOf:
        - $ref: '#/definitions/model.User'
        description: The user who submitted the flag.
      user_id:
        description: The user who submitted the flag.
        type: integer
    type: object
  model.Team:
    properties:
      captain_id:
        description: The captain's id.
        type: integer
      created_at:
        description: The team's creation time.
        type: string
      description:
        description: The team's description.
        type: string
      id:
        description: The team's id. As primary key.
        type: integer
      is_locked:
        description: Whether the team is locked. (true/false)
        type: boolean
      name:
        description: The team's name.
        type: string
      updated_at:
        description: The team's last update time.
        type: string
      users:
        description: The team's users.
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      created_at:
        description: The user's creation time.
        type: string
      description:
        description: The user's description.
        type: string
      email:
        description: The user's email.
        type: string
      group:
        allOf:
        - $ref: '#/definitions/model.Group'
        description: The user's role.
      group_id:
        description: The user's role.
        type: integer
      id:
        description: The user's id. As primary key.
        type: integer
      nickname:
        description: The user's nickname. Not unique.
        type: string
      password:
        description: The user's password. Crypt.
        type: string
      teams:
        description: The user's teams.
        items:
          $ref: '#/definitions/model.Team'
        type: array
      updated_at:
        description: The user's last update time.
        type: string
      username:
        description: The user's username. As a unique identifier.
        type: string
    type: object
  request.CategoryCreateRequest:
    properties:
      color:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - color
    - description
    - name
    type: object
  request.ChallengeCreateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      flags:
        items:
          $ref: '#/definitions/model.Flag'
        type: array
      has_attachment:
        type: boolean
      images:
        items:
          $ref: '#/definitions/model.Image'
        type: array
      is_dynamic:
        type: boolean
      is_practicable:
        type: boolean
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ChallengeDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.ChallengeUpdateRequest:
    properties:
      category_id:
        type: integer
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      flags:
        items:
          $ref: '#/definitions/model.Flag'
        type: array
      has_attachment:
        type: boolean
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/model.Image'
        type: array
      is_practicable:
        type: boolean
      practice_pts:
        type: integer
      title:
        type: string
    type: object
  request.ConfigUpdateRequest:
    properties:
      container:
        $ref: '#/definitions/request.Container'
      platform:
        $ref: '#/definitions/request.Platform'
      user:
        $ref: '#/definitions/request.User'
    type: object
  request.Container:
    properties:
      parallel_limit:
        type: integer
      request_limit:
        type: integer
    type: object
  request.GameCreateRequest:
    properties:
      bio:
        type: string
      description:
        type: string
      ended_at:
        type: integer
      first_blood_reward_ratio:
        type: number
      is_enabled:
        type: boolean
      is_need_write_up:
        type: boolean
      is_public:
        type: boolean
      member_limit_max:
        type: integer
      member_limit_min:
        type: integer
      parallel_container_limit:
        type: integer
      password:
        type: string
      second_blood_reward_ratio:
        type: number
      started_at:
        type: integer
      third_blood_reward_ratio:
        type: number
      title:
        type: string
    required:
    - title
    type: object
  request.Platform:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  request.PodCreateRequest:
    properties:
      challenge_id:
        type: integer
      game_id:
        type: integer
      team_id:
        type: integer
    required:
    - challenge_id
    type: object
  request.PodRemoveRequest:
    properties:
      game_id:
        type: integer
      id:
        type: integer
      team_id:
        type: integer
    required:
    - id
    type: object
  request.PodRenewRequest:
    properties:
      game_id:
        type: integer
      id:
        type: integer
      team_id:
        type: integer
    required:
    - id
    type: object
  request.SubmissionCreateRequest:
    properties:
      challenge_id:
        description: 题目 Id
        type: integer
      flag:
        description: 提交内容
        type: string
      game_id:
        description: 比赛 Id
        type: integer
      team_id:
        description: 团队 Id
        type: integer
    required:
    - challenge_id
    - flag
    type: object
  request.TeamCreateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - captain_id
    - name
    type: object
  request.TeamDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.TeamJoinRequest:
    properties:
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - team_id
    - user_id
    type: object
  request.TeamQuitRequest:
    properties:
      team_id:
        type: integer
      user_id:
        type: integer
    required:
    - team_id
    - user_id
    type: object
  request.TeamUpdateRequest:
    properties:
      captain_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_locked:
        type: boolean
      name:
        type: string
    required:
    - id
    type: object
  request.User:
    properties:
      allow_registration:
        type: boolean
    type: object
  request.UserCreateRequest:
    properties:
      email:
        type: string
      group_id:
        maximum: 5
        minimum: 1
        type: integer
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - group_id
    - nickname
    - password
    - username
    type: object
  request.UserDeleteRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserRegisterRequest:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - nickname
    - password
    - username
    type: object
  request.UserUpdateRequest:
    properties:
      email:
        type: string
      group_id:
        maximum: 5
        minimum: 1
        type: integer
      id:
        type: integer
      nickname:
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - id
    type: object
info:
  contact: {}
paths:
  /api/challenges/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ChallengeDeleteRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除题目（Role≤2）
      tags:
      - 题目
    get:
      consumes:
      - application/json
      description: 只有当 Role≤2 并且 IsDetailed=1 时，才会提供题目的关键信息
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: category
        type: string
      - in: query
        name: difficulty
        type: integer
      - in: query
        name: game_id
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: integer
        name: id
        type: array
      - in: query
        name: is_detailed
        type: boolean
      - in: query
        name: is_dynamic
        type: boolean
      - in: query
        name: is_practicable
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: team_id
        type: integer
      - in: query
        name: title
        type: string
      - in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 题目查询
      tags:
      - 题目
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ChallengeCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建题目（Role≤2）
      tags:
      - 题目
    put:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ChallengeUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新题目（Role≤2）
      tags:
      - 题目
  /api/configs/:
    get:
      consumes:
      - application/json
      description: 配置全部查询
      produces:
      - application/json
      responses: {}
      summary: 配置全部查询
      tags:
      - 配置
    put:
      consumes:
      - application/json
      description: 更新配置
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.ConfigUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新配置
      tags:
      - 配置
  /api/games/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: is_enabled
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses: {}
      summary: 比赛查询
      tags:
      - 比赛
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: GameCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.GameCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建比赛（Role≤3）
      tags:
      - 比赛
  /api/games/:id/broadcast:
    get:
      description: 广播消息
      responses: {}
      summary: 广播消息
      tags:
      - 比赛
  /api/media/challenges/attachments/{id}:
    delete:
      consumes:
      - application/json
      description: 通过题目 Id 删除题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 删除 题目附件
      tags:
      - 资源
    get:
      consumes:
      - application/json
      description: 通过题目 Id 获取题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 获取题目附件
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过题目 Id 设置题目附件
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      - description: 附件文件
        in: formData
        name: attachment
        required: true
        type: file
      responses: {}
      summary: 通过题目 Id 设置题目附件
      tags:
      - 资源
  /api/media/challenges/attachments/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过题目 Id 查找题目附件信息
      parameters:
      - description: 题目 Id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: 通过题目 Id 查找题目附件信息
      tags:
      - 资源
  /api/media/games/cover/{id}:
    get:
      consumes:
      - application/json
      description: 通过比赛 Id 获取比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过比赛 Id 获取比赛封面
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过比赛 Id 设置比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      - description: 封面文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过比赛 Id 设置比赛封面
      tags:
      - 资源
  /api/media/games/writeups/{id}:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取比赛 Writeup
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取比赛 Writeup
      tags:
      - 资源
  /api/media/teams/avatar/:
    get:
      consumes:
      - application/json
      description: 获取拥有头像的团队列表
      produces:
      - application/json
      responses: {}
      summary: 获取拥有头像的团队列表
      tags:
      - 资源
  /api/media/teams/avatar/{id}:
    delete:
      consumes:
      - application/json
      description: 通过团队 Id 删除团队头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 删除团队头像
      tags:
      - 资源
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取团队头像
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过团队 Id 设置团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过团队 Id 设置团队头像
      tags:
      - 资源
  /api/media/teams/avatar/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取团队头像信息
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取团队头像信息
      tags:
      - 资源
  /api/media/users/avatar/:
    get:
      consumes:
      - application/json
      description: 获取拥有头像的用户列表
      produces:
      - application/json
      responses: {}
      summary: 获取拥有头像的用户列表
      tags:
      - 资源
  /api/media/users/avatar/{id}:
    delete:
      consumes:
      - application/json
      description: 通过用户 Id 删除用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 删除用户头像
      tags:
      - 资源
    get:
      consumes:
      - application/json
      description: 通过用户 Id 获取用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 获取用户头像
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过用户 Id 设置用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过用户 Id 设置用户头像
      tags:
      - 资源
  /api/media/users/avatar/{id}/info:
    get:
      consumes:
      - application/json
      description: 通过用户 Id 获得用户头像信息
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 获得用户头像信息
      tags:
      - 资源
  /api/pods/:
    delete:
      description: 停止并删除容器
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PodRemoveRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRemoveRequest'
      produces:
      - application/json
      responses: {}
      summary: 停止并删除容器
      tags:
      - 实例
    get:
      description: 实例查询
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: challenge_id
        type: integer
      - in: query
        name: game_id
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: integer
        name: id
        type: array
      - in: query
        name: is_available
        type: boolean
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - in: query
        name: team_id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 实例查询
      tags:
      - 实例
    post:
      consumes:
      - application/json
      description: 创建实例
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PodCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建实例
      tags:
      - 实例
    put:
      description: 容器续期
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PodRenewRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.PodRenewRequest'
      produces:
      - application/json
      responses: {}
      summary: 容器续期
      tags:
      - 实例
  /api/pods/{id}:
    get:
      description: 实例查询
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 实例查询
      tags:
      - 实例
  /api/submissions/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: 题目 Id
        in: query
        name: challenge_id
        type: integer
      - description: 比赛 Id
        in: query
        name: game_id
        type: integer
      - description: 是否详细
        in: query
        name: is_detailed
        type: integer
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页大小
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: 排序参数
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - description: 评判结果
        in: query
        name: status
        type: integer
      - description: 团队 Id
        in: query
        name: team_id
        type: integer
      - description: 用户 Id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 提交记录查询
      tags:
      - 提交
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: SubmissionCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.SubmissionCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 提交
      tags:
      - 提交
  /api/submissions/batch/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - collectionFormat: csv
        description: 题目 Id 数组
        in: query
        items:
          type: integer
        name: challenge_id
        type: array
      - description: 比赛 Id
        in: query
        name: game_id
        type: integer
      - description: 是否详细
        in: query
        name: is_detailed
        type: boolean
      - description: 每页大小
        in: query
        name: size
        type: integer
      - description: 每道题查询量
        in: query
        name: size_per_challenge
        type: integer
      - collectionFormat: csv
        description: 排序参数
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - description: 评估结果
        in: query
        name: status
        type: integer
      - description: 团队 Id
        in: query
        name: team_id
        type: integer
      - description: 用户 Id
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 提交记录批量查询
      tags:
      - 提交
  /api/teams/:
    delete:
      consumes:
      - application/json
      description: 删除团队
      parameters:
      - description: TeamDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除团队
      tags:
      - 团队
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - in: query
        name: captain_id
        type: integer
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - 团队
    post:
      consumes:
      - application/json
      description: 创建团队
      parameters:
      - description: TeamCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建团队
      tags:
      - 团队
    put:
      consumes:
      - application/json
      description: 更新团队
      parameters:
      - description: TeamUpdateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新团队
      tags:
      - 团队
  /api/teams/batch/:
    get:
      consumes:
      - application/json
      description: 批量查找团队
      parameters:
      - in: query
        name: captain_id
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: integer
        name: id
        type: array
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 批量查找团队
      tags:
      - 团队
  /api/teams/id/{id}:
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - 团队
  /api/teams/members/:
    delete:
      consumes:
      - application/json
      description: 退出团队
      parameters:
      - description: TeamQuitRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamQuitRequest'
      produces:
      - application/json
      responses: {}
      summary: 退出团队
      tags:
      - 团队
    post:
      consumes:
      - application/json
      description: 加入团队
      parameters:
      - description: TeamJoinRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamJoinRequest'
      produces:
      - application/json
      responses: {}
      summary: 加入团队
      tags:
      - 团队
  /api/users/:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户删除（Role≤1 或 (Request)ID=(Authorization)ID）
      tags:
      - 用户
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: id
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: size
        type: integer
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户查询
      tags:
      - 用户
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserCreateRequest
        in: body
        name: 创建请求
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户创建（Role<=1）
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 若 Role>1，则自动忽略 UserUpdateRequest 中的 Role 属性
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserUpdateRequest
        in: body
        name: 更新请求
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户更新（Role≤1 或 (Request)ID=(Authorization)ID）
      tags:
      - 用户
  /api/users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserLoginRequest
        in: body
        name: 登录请求
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户登录
      tags:
      - 用户
  /api/users/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户登出
      tags:
      - 用户
  /api/users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserRegisterRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户注册
      tags:
      - 用户
  /api/users/token/{token}:
    get:
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Token 鉴定
      tags:
      - 用户
swagger: "2.0"
