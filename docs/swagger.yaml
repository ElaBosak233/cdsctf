definitions:
  request.ChallengeCreateRequest:
    properties:
      attachment_id:
        type: string
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      exposed_port:
        type: integer
      flag:
        type: string
      flag_env:
        type: string
      image:
        type: string
      is_dynamic:
        enum:
        - 0
        - 1
        type: integer
      memory_limit:
        type: integer
      title:
        type: string
    type: object
  request.ChallengeDeleteRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  request.ChallengeUpdateRequest:
    properties:
      attachment_id:
        type: string
      description:
        type: string
      difficulty:
        type: integer
      duration:
        type: integer
      exposed_port:
        type: integer
      flag:
        type: string
      flag_env:
        type: string
      id:
        type: string
      image:
        type: string
      is_dynamic:
        enum:
        - 0
        - 1
        type: integer
      memory_limit:
        type: integer
      title:
        type: string
    type: object
  request.InstanceCreateRequest:
    properties:
      challenge_id:
        type: string
    required:
    - challenge_id
    type: object
  request.TeamCreateRequest:
    properties:
      captain_id:
        type: string
      name:
        type: string
    required:
    - captain_id
    - name
    type: object
  request.TeamDeleteRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  request.TeamJoinRequest:
    properties:
      team_id:
        type: string
      user_id:
        type: string
    required:
    - team_id
    - user_id
    type: object
  request.TeamQuitRequest:
    properties:
      team_id:
        type: string
      user_id:
        type: string
    required:
    - team_id
    - user_id
    type: object
  request.TeamUpdateRequest:
    properties:
      captain_id:
        type: string
      id:
        type: string
      name:
        type: string
    required:
    - captain_id
    - id
    - name
    type: object
  request.UserCreateRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UserDeleteRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  request.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserLogoutRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  request.UserRegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UserUpdateRequest:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - id
    - password
    - username
    type: object
info:
  contact: {}
  description: 没有其他东西啦，仅仅是所有的后端接口，不要乱用哦
  title: PgsHub Backend API
  version: "1.0"
paths:
  /api/assets/games/cover/{id}:
    get:
      consumes:
      - application/json
      description: 通过比赛 Id 获取比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过比赛 Id 获取比赛封面
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过比赛 Id 设置比赛封面
      parameters:
      - description: 比赛 Id
        in: path
        name: id
        required: true
        type: string
      - description: 封面文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过比赛 Id 设置比赛封面
      tags:
      - 资源
  /api/assets/games/writeups/{id}:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取比赛 Writeup
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取比赛 Writeup
      tags:
      - 资源
  /api/assets/teams/avatar/{id}:
    get:
      consumes:
      - application/json
      description: 通过团队 Id 获取团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过团队 Id 获取团队头像
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过团队 Id 设置团队头像
      parameters:
      - description: 团队 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过团队 Id 设置团队头像
      tags:
      - 资源
  /api/assets/users/avatar/{id}:
    get:
      consumes:
      - application/json
      description: 通过用户 Id 获取用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 通过用户 Id 获取用户头像
      tags:
      - 资源
    post:
      consumes:
      - multipart/form-data
      description: 通过用户 Id 设置用户头像
      parameters:
      - description: 用户 Id
        in: path
        name: id
        required: true
        type: string
      - description: 头像文件
        in: formData
        name: avatar
        required: true
        type: file
      responses: {}
      summary: 通过用户 Id 设置用户头像
      tags:
      - 资源
  /api/challenges:
    delete:
      consumes:
      - application/json
      description: 删除题目
      parameters:
      - description: ChallengeDeleteRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除题目
      tags:
      - 题目
    get:
      consumes:
      - application/json
      description: 题目全部查询
      produces:
      - application/json
      responses: {}
      summary: 题目全部查询
      tags:
      - 题目
    post:
      consumes:
      - application/json
      description: 创建题目
      parameters:
      - description: ChallengeCreateRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建题目
      tags:
      - 题目
    put:
      consumes:
      - application/json
      description: 更新题目
      parameters:
      - description: ChallengeUpdateRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChallengeUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新题目
      tags:
      - 题目
  /api/challenges/{id}:
    get:
      consumes:
      - application/json
      description: 题目查询
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 题目查询
      tags:
      - 题目
  /api/configs:
    get:
      consumes:
      - application/json
      description: 配置全部查询
      produces:
      - application/json
      responses: {}
      summary: 配置全部查询
      tags:
      - 配置
    put:
      consumes:
      - application/json
      description: 更新配置
      produces:
      - application/json
      responses: {}
      summary: 更新配置
      tags:
      - 配置
  /api/instances:
    delete:
      description: 停止并删除容器
      parameters:
      - description: InstanceId
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 停止并删除容器
      tags:
      - 实例
    get:
      description: 实例全部查询
      produces:
      - application/json
      responses: {}
      summary: 实例全部查询
      tags:
      - 实例
    post:
      consumes:
      - application/json
      description: 创建实例
      parameters:
      - description: InstanceCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.InstanceCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建实例
      tags:
      - 实例
  /api/instances/{id}:
    get:
      description: 实例查询
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 实例查询
      tags:
      - 实例
  /api/instances/renew:
    get:
      description: 容器续期
      parameters:
      - description: InstanceId
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 容器续期
      tags:
      - 实例
  /api/instances/status:
    get:
      description: 获取实例状态
      parameters:
      - description: InstanceId
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 获取实例状态
      tags:
      - 实例
  /api/teams:
    delete:
      consumes:
      - application/json
      description: 删除团队
      parameters:
      - description: TeamDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 删除团队
      tags:
      - 团队
    post:
      consumes:
      - application/json
      description: 创建团队
      parameters:
      - description: TeamCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 创建团队
      tags:
      - 团队
    put:
      consumes:
      - application/json
      description: 更新团队
      parameters:
      - description: TeamUpdateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新团队
      tags:
      - 团队
  /api/teams/:
    get:
      consumes:
      - application/json
      description: 查找所有团队
      produces:
      - application/json
      responses: {}
      summary: 查找所有团队
      tags:
      - 团队
  /api/teams/id/{id}:
    get:
      consumes:
      - application/json
      description: 查找团队
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 查找团队
      tags:
      - 团队
  /api/teams/members:
    delete:
      consumes:
      - application/json
      description: 退出团队
      parameters:
      - description: TeamQuitRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamQuitRequest'
      produces:
      - application/json
      responses: {}
      summary: 退出团队
      tags:
      - 团队
    post:
      consumes:
      - application/json
      description: 加入团队
      parameters:
      - description: TeamJoinRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.TeamJoinRequest'
      produces:
      - application/json
      responses: {}
      summary: 加入团队
      tags:
      - 团队
  /api/user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: UserLoginRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户登录
      tags:
      - 用户
  /api/user/logout:
    post:
      consumes:
      - application/json
      description: 用户登出
      parameters:
      - description: UserLogoutRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserLogoutRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户登出
      tags:
      - 用户
  /api/user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: UserRegisterRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserRegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户注册
      tags:
      - 用户
  /api/user/token/{token}:
    get:
      description: Token 鉴定
      parameters:
      - description: token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Token 鉴定
      tags:
      - 用户
  /api/users:
    delete:
      consumes:
      - application/json
      description: 用户删除（管理员）
      parameters:
      - description: UserDeleteRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserDeleteRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户删除 *
      tags:
      - 用户
    get:
      consumes:
      - application/json
      description: 用户全部查询
      produces:
      - application/json
      responses: {}
      summary: 用户全部查询
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 用户创建（管理员）
      parameters:
      - description: UserCreateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserCreateRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户创建 *
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 用户更新（管理员）
      parameters:
      - description: UserUpdateRequest
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 用户更新 *
      tags:
      - 用户
  /api/users/id/{id}:
    get:
      consumes:
      - application/json
      description: 用户查询
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户查询（通过 Id）
      tags:
      - 用户
  /api/users/username/{username}:
    get:
      consumes:
      - application/json
      description: 用户查询
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: 用户查询（通过 Username）
      tags:
      - 用户
swagger: "2.0"
