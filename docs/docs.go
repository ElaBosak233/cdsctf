// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/instance/create": {
            "post": {
                "description": "创建实例",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "创建实例",
                "parameters": [
                    {
                        "description": "InstanceCreateRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.InstanceCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/instance/remove": {
            "get": {
                "description": "停止并删除容器",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "停止并删除容器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InstanceId",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/instance/renew": {
            "get": {
                "description": "容器续期",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "容器续期",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InstanceId",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/instance/status": {
            "get": {
                "description": "获取示例状态",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "获取示例状态",
                "parameters": [
                    {
                        "type": "string",
                        "description": "InstanceId",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/login": {
            "post": {
                "description": "用户登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "UserLoginRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/logout": {
            "post": {
                "description": "用户登出",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登出",
                "parameters": [
                    {
                        "description": "UserLogoutRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLogoutRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/register": {
            "post": {
                "description": "用户注册",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "UserRegisterRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/user/verifyToken/{token}": {
            "get": {
                "description": "Token 鉴定",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "Token 鉴定",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "request.InstanceCreateRequest": {
            "type": "object",
            "required": [
                "challenge_id"
            ],
            "properties": {
                "challenge_id": {
                    "type": "string"
                }
            }
        },
        "request.UserLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserLogoutRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "PgsHub Backend API",
	Description:      "没有其他东西啦，仅仅是所有的后端接口，不要乱用哦",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
