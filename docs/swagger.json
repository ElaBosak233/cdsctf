{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/categories/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "get category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "CategoryUpdateRequest",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CategoryUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "create new category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "CategoryCreateRequest",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CategoryCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/challenges/": {
            "get": {
                "description": "只有当 Role≤2 并且 IsDetailed=1 时，才会提供题目的关键信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "题目"
                ],
                "summary": "题目查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "difficulty",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "game_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_detailed",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_dynamic",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_practicable",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "team_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "题目"
                ],
                "summary": "更新题目（Role≤2）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ChallengeUpdateRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChallengeUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "题目"
                ],
                "summary": "创建题目（Role≤2）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ChallengeCreateRequest",
                        "name": "创建请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChallengeCreateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "题目"
                ],
                "summary": "删除题目（Role≤2）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "ChallengeDeleteRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ChallengeDeleteRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/configs/": {
            "get": {
                "description": "配置全部查询",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "配置"
                ],
                "summary": "配置全部查询",
                "responses": {}
            },
            "put": {
                "description": "更新配置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "配置"
                ],
                "summary": "更新配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ConfigUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/games/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "比赛"
                ],
                "summary": "比赛查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "is_enabled",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "比赛"
                ],
                "summary": "创建比赛（Role≤3）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "GameCreateRequest",
                        "name": "创建请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GameCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/games/:id/broadcast": {
            "get": {
                "description": "广播消息",
                "tags": [
                    "比赛"
                ],
                "summary": "广播消息",
                "responses": {}
            }
        },
        "/api/media/challenges/attachments/{id}": {
            "get": {
                "description": "通过题目 Id 获取题目附件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过题目 Id 获取题目附件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "题目 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "通过题目 Id 设置题目附件",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过题目 Id 设置题目附件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "题目 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "附件文件",
                        "name": "attachment",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "通过题目 Id 删除题目附件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过题目 Id 删除 题目附件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "题目 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/challenges/attachments/{id}/info": {
            "get": {
                "description": "通过题目 Id 查找题目附件信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过题目 Id 查找题目附件信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "题目 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/games/cover/{id}": {
            "get": {
                "description": "通过比赛 Id 获取比赛封面",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过比赛 Id 获取比赛封面",
                "parameters": [
                    {
                        "type": "string",
                        "description": "比赛 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "通过比赛 Id 设置比赛封面",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过比赛 Id 设置比赛封面",
                "parameters": [
                    {
                        "type": "string",
                        "description": "比赛 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "封面文件",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/games/writeups/{id}": {
            "get": {
                "description": "通过团队 Id 获取比赛 Writeup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过团队 Id 获取比赛 Writeup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "团队 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/teams/avatar/": {
            "get": {
                "description": "获取拥有头像的团队列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "获取拥有头像的团队列表",
                "responses": {}
            }
        },
        "/api/media/teams/avatar/{id}": {
            "get": {
                "description": "通过团队 Id 获取团队头像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过团队 Id 获取团队头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "团队 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "通过团队 Id 设置团队头像",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过团队 Id 设置团队头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "团队 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "头像文件",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "通过团队 Id 删除团队头像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过团队 Id 删除团队头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/teams/avatar/{id}/info": {
            "get": {
                "description": "通过团队 Id 获取团队头像信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过团队 Id 获取团队头像信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "团队 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/users/avatar/": {
            "get": {
                "description": "获取拥有头像的用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "获取拥有头像的用户列表",
                "responses": {}
            }
        },
        "/api/media/users/avatar/{id}": {
            "get": {
                "description": "通过用户 Id 获取用户头像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过用户 Id 获取用户头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "通过用户 Id 设置用户头像",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过用户 Id 设置用户头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "头像文件",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "通过用户 Id 删除用户头像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过用户 Id 删除用户头像",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/media/users/avatar/{id}/info": {
            "get": {
                "description": "通过用户 Id 获得用户头像信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "资源"
                ],
                "summary": "通过用户 Id 获得用户头像信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户 Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/pods/": {
            "get": {
                "description": "实例查询",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "实例查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "challenge_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "game_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "is_available",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "team_id",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "容器续期",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "容器续期",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PodRenewRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PodRenewRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "创建实例",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "创建实例",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PodCreateRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PodCreateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "停止并删除容器",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "停止并删除容器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PodRemoveRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PodRemoveRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/pods/{id}": {
            "get": {
                "description": "实例查询",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "实例"
                ],
                "summary": "实例查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/submissions/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "提交"
                ],
                "summary": "提交记录查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "题目 Id",
                        "name": "challenge_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "比赛 Id",
                        "name": "game_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "是否详细",
                        "name": "is_detailed",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每页大小",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "排序参数",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "评判结果",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "团队 Id",
                        "name": "team_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "用户 Id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "提交"
                ],
                "summary": "提交",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "SubmissionCreateRequest",
                        "name": "创建请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubmissionCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/submissions/batch/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "提交"
                ],
                "summary": "提交记录批量查询",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "题目 Id 数组",
                        "name": "challenge_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "比赛 Id",
                        "name": "game_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "是否详细",
                        "name": "is_detailed",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每页大小",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "每道题查询量",
                        "name": "size_per_challenge",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "排序参数",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "评估结果",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "团队 Id",
                        "name": "team_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "用户 Id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/teams/": {
            "get": {
                "description": "查找团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "查找团队",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "captain_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "更新团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "更新团队",
                "parameters": [
                    {
                        "description": "TeamUpdateRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TeamUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "创建团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "创建团队",
                "parameters": [
                    {
                        "description": "TeamCreateRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TeamCreateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "删除团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "删除团队",
                "parameters": [
                    {
                        "description": "TeamDeleteRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TeamDeleteRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/teams/batch/": {
            "get": {
                "description": "批量查找团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "批量查找团队",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "captain_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/api/teams/id/{id}": {
            "get": {
                "description": "查找团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "查找团队",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/teams/members/": {
            "post": {
                "description": "加入团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "加入团队",
                "parameters": [
                    {
                        "description": "TeamJoinRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TeamJoinRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "退出团队",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "团队"
                ],
                "summary": "退出团队",
                "parameters": [
                    {
                        "description": "TeamQuitRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.TeamQuitRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/users/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户查询",
                "parameters": [
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "若 Role\u003e1，则自动忽略 UserUpdateRequest 中的 Role 属性",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户更新（Role≤1 或 (Request)ID=(Authorization)ID）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "UserUpdateRequest",
                        "name": "更新请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户创建（Role\u003c=1）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "UserCreateRequest",
                        "name": "创建请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserCreateRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户删除（Role≤1 或 (Request)ID=(Authorization)ID）",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "UserDeleteRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserDeleteRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/users/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "UserLoginRequest",
                        "name": "登录请求",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/users/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登出",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/users/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "UserRegisterRequest",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/users/token/{token}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "Token 鉴定",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "model.Category": {
            "type": "object",
            "properties": {
                "color": {
                    "description": "The category's theme color. (Such as Rainbow Dash's color is \"#60AEE4\")",
                    "type": "string"
                },
                "created_at": {
                    "description": "The category's creation time.",
                    "type": "string"
                },
                "description": {
                    "description": "The category's description.",
                    "type": "string"
                },
                "icon": {
                    "description": "The category's icon. (Based on Material Design Icons, Reference site: https://pictogrammers.com/library/mdi/) (Such as \"fingerprint\": https://pictogrammers.com/library/mdi/icon/fingerprint/)",
                    "type": "string"
                },
                "id": {
                    "description": "The category's id. As primary key.",
                    "type": "integer"
                },
                "name": {
                    "description": "The category's name.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "The category's last update time.",
                    "type": "string"
                }
            }
        },
        "model.Challenge": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "The challenge's category.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Category"
                        }
                    ]
                },
                "category_id": {
                    "description": "The challenge's category.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "The challenge's creation time.",
                    "type": "string"
                },
                "description": {
                    "description": "The challenge's description.",
                    "type": "string"
                },
                "difficulty": {
                    "description": "The degree of difficulty. (From 1 to 5)",
                    "type": "integer"
                },
                "duration": {
                    "description": "The duration of container maintenance in the initial state. (Seconds)",
                    "type": "integer"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Flag"
                    }
                },
                "has_attachment": {
                    "description": "Whether the challenge has attachment.",
                    "type": "boolean"
                },
                "hints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Hint"
                    }
                },
                "id": {
                    "description": "The challenge's id. As primary key.",
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Image"
                    }
                },
                "is_dynamic": {
                    "description": "Whether the challenge is based on dynamic container.",
                    "type": "boolean"
                },
                "is_practicable": {
                    "description": "Whether the challenge is practicable. (Is the practice field visible.)",
                    "type": "boolean"
                },
                "practice_pts": {
                    "description": "The points will be given when the challenge is solved in practice field.",
                    "type": "integer"
                },
                "submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Submission"
                    }
                },
                "title": {
                    "description": "The challenge's title.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "The challenge's last update time.",
                    "type": "string"
                }
            }
        },
        "model.Env": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image": {
                    "$ref": "#/definitions/model.Image"
                },
                "image_id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.Flag": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "The challenge which the flag belongs to.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Challenge"
                        }
                    ]
                },
                "challenge_id": {
                    "description": "The challenge id. The flag belongs to.",
                    "type": "integer"
                },
                "env": {
                    "description": "The environment variable which is used to be injected with the flag.",
                    "type": "string"
                },
                "id": {
                    "description": "The flag id.",
                    "type": "integer"
                },
                "type": {
                    "description": "The flag type. (\"static\"/\"dynamic\"/\"pattern\")",
                    "type": "string"
                },
                "value": {
                    "description": "The flag content. Maybe a string or a regex, or the placeholder for dynamic challenges. (Such as \"flag{friendsh1p_1s_magic}\" or \"flag{[a-zA-Z]{5}}\" or \"flag{[UUID]}\")",
                    "type": "string"
                }
            }
        },
        "model.Game": {
            "type": "object",
            "properties": {
                "bio": {
                    "description": "The game's short description.",
                    "type": "string"
                },
                "challenges": {
                    "description": "The game's challenges.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Challenge"
                    }
                },
                "created_at": {
                    "description": "The game's creation time.",
                    "type": "string"
                },
                "description": {
                    "description": "The game's description. (Markdown supported.)",
                    "type": "string"
                },
                "ended_at": {
                    "description": "The game's end time. (Unix)",
                    "type": "integer"
                },
                "first_blood_reward_ratio": {
                    "description": "The prize ratio of first blood.",
                    "type": "number"
                },
                "id": {
                    "description": "The game's id. As primary key.",
                    "type": "integer"
                },
                "is_enabled": {
                    "description": "Whether the game is enabled.",
                    "type": "boolean"
                },
                "is_need_write_up": {
                    "description": "Whether the game need write up.",
                    "type": "boolean"
                },
                "is_public": {
                    "description": "Whether the game is public.",
                    "type": "boolean"
                },
                "member_limit_max": {
                    "description": "The maximum team member limit.",
                    "type": "integer"
                },
                "member_limit_min": {
                    "description": "The minimum team member limit.",
                    "type": "integer"
                },
                "parallel_container_limit": {
                    "description": "The maximum parallel container limit.",
                    "type": "integer"
                },
                "password": {
                    "description": "The game's password. Only enabled when the game is private.",
                    "type": "string"
                },
                "second_blood_reward_ratio": {
                    "description": "The prize ratio of second blood.",
                    "type": "number"
                },
                "started_at": {
                    "description": "The game's start time. (Unix)",
                    "type": "integer"
                },
                "third_blood_reward_ratio": {
                    "description": "The prize ratio of third blood.",
                    "type": "number"
                },
                "title": {
                    "description": "The game's title.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "The game's last update time.",
                    "type": "string"
                }
            }
        },
        "model.Group": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        },
        "model.Hint": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "The challenge which the hint belongs to.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Challenge"
                        }
                    ]
                },
                "challenge_id": {
                    "description": "The challenge which the hint belongs to.",
                    "type": "integer"
                },
                "content": {
                    "description": "The content of the hint.",
                    "type": "string"
                },
                "created_at": {
                    "description": "The hint's creation time.",
                    "type": "string"
                },
                "game": {
                    "description": "The game which the hint belongs to.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Game"
                        }
                    ]
                },
                "game_id": {
                    "description": "The game which the hint belongs to. (If 0, it means the hint is visible in practice field.)",
                    "type": "integer"
                },
                "id": {
                    "description": "The hint's id.",
                    "type": "integer"
                },
                "published_at": {
                    "description": "When the hint will be published.",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "The hint's last update time.",
                    "type": "string"
                }
            }
        },
        "model.Image": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "integer"
                },
                "cpu_limit": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Env"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "memory_limit": {
                    "type": "integer"
                },
                "name": {
                    "description": "A name of image is always repository + tag. (Such as \"nginx:latest\")",
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Port"
                    }
                }
            }
        },
        "model.Port": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "The port's description.",
                    "type": "string"
                },
                "id": {
                    "description": "The port's id. As primary key.",
                    "type": "integer"
                },
                "image": {
                    "description": "The JeopardyImage which the port belongs to.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Image"
                        }
                    ]
                },
                "image_id": {
                    "description": "The JeopardyImage which the port belongs to.",
                    "type": "integer"
                },
                "value": {
                    "description": "The port number.",
                    "type": "integer"
                }
            }
        },
        "model.Submission": {
            "type": "object",
            "properties": {
                "challenge": {
                    "description": "The challenge which is related to this submission.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Challenge"
                        }
                    ]
                },
                "challenge_id": {
                    "description": "The challenge which is related to this submission.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "The submission's creation time.",
                    "type": "string"
                },
                "flag": {
                    "description": "The flag which was submitted for judgement.",
                    "type": "string"
                },
                "game": {
                    "description": "The game which is related to this submission.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Game"
                        }
                    ]
                },
                "game_id": {
                    "description": "The game which is related to this submission. (Must be set when TeamID is set)",
                    "type": "integer"
                },
                "id": {
                    "description": "The submission's id. As primary key.",
                    "type": "integer"
                },
                "pts": {
                    "description": "The points of the submission.",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of the submission. (0-meaningless, 1-accepted, 2-incorrect, 3-cheat, 4-duplicate)",
                    "type": "integer"
                },
                "team": {
                    "description": "The team which submitted the flag.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Team"
                        }
                    ]
                },
                "team_id": {
                    "description": "The team which submitted the flag. (Must be set when GameID is set)",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "The submission's last update time.",
                    "type": "string"
                },
                "user": {
                    "description": "The user who submitted the flag.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "The user who submitted the flag.",
                    "type": "integer"
                }
            }
        },
        "model.Team": {
            "type": "object",
            "properties": {
                "captain_id": {
                    "description": "The captain's id.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "The team's creation time.",
                    "type": "string"
                },
                "description": {
                    "description": "The team's description.",
                    "type": "string"
                },
                "id": {
                    "description": "The team's id. As primary key.",
                    "type": "integer"
                },
                "is_locked": {
                    "description": "Whether the team is locked. (true/false)",
                    "type": "boolean"
                },
                "name": {
                    "description": "The team's name.",
                    "type": "string"
                },
                "updated_at": {
                    "description": "The team's last update time.",
                    "type": "string"
                },
                "users": {
                    "description": "The team's users.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "The user's creation time.",
                    "type": "string"
                },
                "description": {
                    "description": "The user's description.",
                    "type": "string"
                },
                "email": {
                    "description": "The user's email.",
                    "type": "string"
                },
                "group": {
                    "description": "The user's role.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Group"
                        }
                    ]
                },
                "group_id": {
                    "description": "The user's role.",
                    "type": "integer"
                },
                "id": {
                    "description": "The user's id. As primary key.",
                    "type": "integer"
                },
                "nickname": {
                    "description": "The user's nickname. Not unique.",
                    "type": "string"
                },
                "password": {
                    "description": "The user's password. Crypt.",
                    "type": "string"
                },
                "teams": {
                    "description": "The user's teams.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Team"
                    }
                },
                "updated_at": {
                    "description": "The user's last update time.",
                    "type": "string"
                },
                "username": {
                    "description": "The user's username. As a unique identifier.",
                    "type": "string"
                }
            }
        },
        "request.CategoryCreateRequest": {
            "type": "object",
            "required": [
                "color",
                "description",
                "icon",
                "name"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.CategoryUpdateRequest": {
            "type": "object",
            "required": [
                "color",
                "description",
                "icon",
                "id",
                "name"
            ],
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.ChallengeCreateRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Flag"
                    }
                },
                "has_attachment": {
                    "type": "boolean"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Image"
                    }
                },
                "is_dynamic": {
                    "type": "boolean"
                },
                "is_practicable": {
                    "type": "boolean"
                },
                "practice_pts": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.ChallengeDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.ChallengeUpdateRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "duration": {
                    "type": "integer"
                },
                "flags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Flag"
                    }
                },
                "has_attachment": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Image"
                    }
                },
                "is_practicable": {
                    "type": "boolean"
                },
                "practice_pts": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.ConfigUpdateRequest": {
            "type": "object",
            "properties": {
                "container": {
                    "$ref": "#/definitions/request.Container"
                },
                "platform": {
                    "$ref": "#/definitions/request.Platform"
                },
                "user": {
                    "$ref": "#/definitions/request.User"
                }
            }
        },
        "request.Container": {
            "type": "object",
            "properties": {
                "parallel_limit": {
                    "type": "integer"
                },
                "request_limit": {
                    "type": "integer"
                }
            }
        },
        "request.GameCreateRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "bio": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ended_at": {
                    "type": "integer"
                },
                "first_blood_reward_ratio": {
                    "type": "number"
                },
                "is_enabled": {
                    "type": "boolean"
                },
                "is_need_write_up": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "member_limit_max": {
                    "type": "integer"
                },
                "member_limit_min": {
                    "type": "integer"
                },
                "parallel_container_limit": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "second_blood_reward_ratio": {
                    "type": "number"
                },
                "started_at": {
                    "type": "integer"
                },
                "third_blood_reward_ratio": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.Platform": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.PodCreateRequest": {
            "type": "object",
            "required": [
                "challenge_id"
            ],
            "properties": {
                "challenge_id": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "request.PodRemoveRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "request.PodRenewRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "request.SubmissionCreateRequest": {
            "type": "object",
            "required": [
                "challenge_id",
                "flag"
            ],
            "properties": {
                "challenge_id": {
                    "description": "题目 Id",
                    "type": "integer"
                },
                "flag": {
                    "description": "提交内容",
                    "type": "string"
                },
                "game_id": {
                    "description": "比赛 Id",
                    "type": "integer"
                },
                "team_id": {
                    "description": "团队 Id",
                    "type": "integer"
                }
            }
        },
        "request.TeamCreateRequest": {
            "type": "object",
            "required": [
                "captain_id",
                "name"
            ],
            "properties": {
                "captain_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.TeamDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.TeamJoinRequest": {
            "type": "object",
            "required": [
                "team_id",
                "user_id"
            ],
            "properties": {
                "team_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.TeamQuitRequest": {
            "type": "object",
            "required": [
                "team_id",
                "user_id"
            ],
            "properties": {
                "team_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.TeamUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "captain_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_locked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.User": {
            "type": "object",
            "properties": {
                "allow_registration": {
                    "type": "boolean"
                }
            }
        },
        "request.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "group_id",
                "nickname",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "nickname": {
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "request.UserDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.UserLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserRegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "nickname",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.UserUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string",
                    "minLength": 2
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        }
    }
}