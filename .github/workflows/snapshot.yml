name: Snapshot

on:
  workflow_dispatch:

jobs:
  build_for_linux:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Get Git Info
        id: gitinfo
        run: |
          echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "buildtime=$(date -u '+%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Display Git Info
        run: |
          echo "Version: ${{ env.version }}"
          echo "Branch: ${{ env.branch }}"
          echo "Commit: ${{ env.commit }}"
          echo "Build Time: ${{ env.buildtime }}"

      - name: Build for Linux
        run: |
          echo "Building for Linux..."
          go build -ldflags "-linkmode external -w -s -X 'github.com/elabosak233/pgshub/internal/global.Version=${{ env.version }}' -X 'github.com/elabosak233/pgshub/internal/global.Branch=${{ env.branch }}' -X 'github.com/elabosak233/pgshub/internal/global.GitCommitID=${{ env.commit }}' -X 'github.com/elabosak233/pgshub/internal/global.BuildAt=${{ env.buildtime }}'" -o ./build/linux/pgshub ./cmd/pgshub || true
          cd ./build/linux
          mv pgshub pgshub-linux
          cd ../..

      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: pgshub-linux
          path: build/linux/pgshub-linux

  build_for_windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Get Git Info
        id: gitinfo
        run: |
          echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "buildtime=$(date -u '+%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Display Git Info
        run: |
          echo "Version: ${{ env.version }}"
          echo "Branch: ${{ env.branch }}"
          echo "Commit: ${{ env.commit }}"
          echo "Build Time: ${{ env.buildtime }}"

      - name: Build for Windows
        run: |
          echo "Building for Windows..."
          go build -ldflags "-linkmode external -w -s -X 'github.com/elabosak233/pgshub/internal/global.Version=${{ env.version }}' -X 'github.com/elabosak233/pgshub/internal/global.Branch=${{ env.branch }}' -X 'github.com/elabosak233/pgshub/internal/global.GitCommitID=${{ env.commit }}' -X 'github.com/elabosak233/pgshub/internal/global.BuildAt=${{ env.buildtime }}'" -o ./build/windows/pgshub.exe ./cmd/pgshub || true
          cd ./build/windows
          mv pgshub.exe pgshub-windows.exe
          cd ../..

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: pgshub-windows
          path: build/windows/pgshub-windows.exe

  build_for_macos:
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Get Git Info
        id: gitinfo
        run: |
          echo "version=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "buildtime=$(date -u '+%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Display Git Info
        run: |
          echo "Version: ${{ env.version }}"
          echo "Branch: ${{ env.branch }}"
          echo "Commit: ${{ env.commit }}"
          echo "Build Time: ${{ env.buildtime }}"

      - name: Build for macOS
        run: |
          echo "Building for macOS..."
          go build -ldflags "-linkmode external -w -s -X 'github.com/elabosak233/pgshub/internal/global.Version=${{ env.version }}' -X 'github.com/elabosak233/pgshub/internal/global.Branch=${{ env.branch }}' -X 'github.com/elabosak233/pgshub/internal/global.GitCommitID=${{ env.commit }}' -X 'github.com/elabosak233/pgshub/internal/global.BuildAt=${{ env.buildtime }}'" -o ./build/macos/pgshub ./cmd/pgshub || true
          cd ./build/macos
          mv pgshub pgshub-macos
          cd ../..

      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: pgshub-macos
          path: build/macos/pgshub-macos
